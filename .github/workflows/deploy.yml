name: Deploy Hugo site to GitHub Pages

on:
  # Runs on pushes targeting the main (or master) branch
  push:
    branches:
      - main # Or master, depending on your repository's default branch

  # Allows you to run this workflow manually from the Actions tab on GitHub
  workflow_dispatch:

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: '0.127.0' # CONFIRM THIS MATCHES YOUR `hugo version` output (e.g., 0.127.0)
      NODE_VERSION: '20'    # Needed if your theme or assets use Node.js (Blowfish might)
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Setup Node.js # Optional, but good for themes like Blowfish using Tailwind/PostCSS
        if: env.NODE_VERSION != ''
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm' 

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive  # Fetch Hugo themes (Blowfish)
          fetch-depth: 0         # Fetch all history for .GitInfo and .Lastmod

      - name: Install Theme Dependencies (if any)
        if: env.NODE_VERSION != '' && (steps.checkout.outputs.submodules-check == 'true')
        run: |
          if [ -f "themes/blowfish/package.json" ]; then
            (cd themes/blowfish && npm ci)
          elif [ -f "package.json" ]; then 
            npm ci
          else
            echo "No package.json found for theme or project root."
          fi

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Hugo
        run: hugo --minify --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public 

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4